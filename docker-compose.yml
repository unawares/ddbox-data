version: '3.10'


networks:
  default: {}


x-shared-environment: &shared-environment
  ENV: "DEV"
  POSTGRES_HOST: "postgres"
  POSTGRES_PORT: "5432"
  POSTGRES_DB: "db-name"
  POSTGRES_USER: "db-user"
  POSTGRES_PASSWORD: "db-pass"
  DATABASE_URL: "postgresql://db-user:db-pass@postgres:5432/db-name"
  CELERY_BROKER_URL: "redis://redis:6379/0"
  CELERY_RESULT_BACKEND: "redis://redis:6379/0"
  CELERY_LOG_LEVEL: "info"
  CELERY_CONCURENCY: "1"
  CELERY_FLOWER_USER: "admin"
  CELERY_FLOWER_PASSWORD: "admin"
  MINIO_ROOT_USER: minioadmin
  MINIO_ROOT_PASSWORD: minioadmin
  MINIO_ENDPOINT: minio:9000
  MINIO_ACCESS_KEY: minioadmin
  MINIO_SECRET_KEY: minioadmin
  REDIS_CACHE: 'redis://redis:6379'


x-base-image: &base-image
  restart: always
  environment:
    <<: *shared-environment
  networks:
    default: {}
  logging:
    options:
      max-size: "10m"
      max-file: "3"

x-minio-image: &minio-image
  <<: *base-image
  image: quay.io/minio/minio:RELEASE.2023-04-28T18-11-17Z
  command: server --console-address ":9001" /data/
  expose:
    - "9000"
    - "9001"
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    interval: 30s
    timeout: 20s
    retries: 3

services:
  postgres:
    <<: *base-image
    image: "postgres:14.1-alpine"
    hostname: postgres
    volumes:
      - ./tmp/data/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: "db-name"
      POSTGRES_USER: "db-user"
      POSTGRES_PASSWORD: "db-pass"

  redis:
    <<: *base-image
    hostname: redis
    image: redis:6.2.6
    command: redis-server --appendonly yes
    volumes:
      - ./tmp/data/redis:/data

  minio:
    <<: *minio-image
    hostname: minio
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - ./tmp/data/minio:/data

  app: &app
    <<: *base-image
    hostname: app
    build:
      context: .
      dockerfile: Dockerfile
      # platforms:
      #   - arm64
        # - linux/amd64
      args:
        - PYTHON_VERSION=3.10
      shm_size: '2gb'
    # platform: arm64
    volumes:
      - ./src:/app/src
    command: start.sh
    ports:
      - 8000:8000
    depends_on:
      - postgres
      - redis
      - minio

  app-celery:
    <<: *app
    hostname: app-celery
    shm_size: '2gb'
    command: start.celery.sh
    ports: []

  app-celery-beat:
    <<: *app
    hostname: app-celery-beat
    command: start.celery-beat.sh
    ports: []

  app-celery-flower:
    <<: *app
    hostname: app-celery-flower
    command: start.celery-flower.sh
    ports:
      - 5555:5555
    depends_on:
      - app-celery
      - app-celery-beat
